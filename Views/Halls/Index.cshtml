@using Project02.ViewModels.Hall
@model HallIndexVm

@{
    ViewData["Title"] = "Hall";
    Layout = "_AdminLayout";
}

<form id="antiForgeryForm" method="post">@Html.AntiForgeryToken()</form>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex align-items-center">
                    <div>
                        <form asp-action="Index" method="get">
                            <select asp-for="sortOrder" asp-items="Model.SortOptions" class="form-select form-select-sm me-2"
                                    onchange="this.form.submit()"></select>
                        </form>
                    </div>

                    <div class="d-flex ms-auto">
                        <form asp-action="Index" method="get" class="d-flex me-2">
                            <input type="text" name="q" value="@Model.Q"
                                   class="form-control form-control-sm me-2"
                                   placeholder="Search by name..." />
                            <input type="hidden" name="pageSize" value="@Model.PageSize" />
                            <button type="submit" class="btn btn-sm btn-secondary d-flex align-items-center">
                                <i class="fa-solid fa-magnifying-glass me-1"></i>
                                Search
                            </button>

                        </form>

                        <a asp-action="Create" class="btn btn-sm btn-primary">
                            <i class="fa-solid fa-plus"></i> Add Hall
                        </a>
                    </div>
                </div>

                <div class="card-body">
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Cinema Name</th>
                                <th>Capacity</th>
                                <th class="text-center">Control</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Items.Count == 0)
                            {
                                <tr>
                                    <td colspan="3" class="text-center text-muted">No hall found</td>
                                </tr>
                            }
                            else
                            {
                                foreach (var item in Model.Items)
                                {

                                    <tr>
                                        <td>@item.Cinema_Name</td>
                                        <td>@item.Capacity</td>
                                        <td>
                                            <a asp-action="Edit" class="btn btn-sm btn-outline-primary" asp-route-id="@item.Hall_ID"><i class="fa-solid fa-pen-to-square"></i></a>
                                            <button type="button" class="btn btn-sm btn-outline-danger btn-delete" data-id="@item.Hall_ID" data-name="@item.Cinema_Name"><i class="fa-solid fa-trash"></i></button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="row my-1">
                        <div class="col-12"></div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            Showing @Model.Start to @Model.End of @Model.TotalItems entries
                        </div>
                        <nav>
                            <ul class="pagination mb-0">
                                <li class="page-item me-1 @(Model.Page == 1 ? "disabled" : "")">
                                    <a class="page-link"
                                       asp-action="Index"
                                       asp-route-search="@ViewBag.Search"
                                       asp-route-page="@(Model.Page - 1)"
                                       asp-route-pageSize="@(Model.PageSize)"><i class="fa-solid fa-arrow-left"></i></a>
                                </li>

                                @for (int p = 1; p <= Model.TotalPage; p++)
                                {
                                    <li class="page-item me-1 @(p == Model.Page ? "active" : "")">
                                        <a class="page-link"
                                           asp-action="Index"
                                           asp-route-search="@ViewBag.Search"
                                           asp-route-page="@p"
                                           asp-route-pageSize="@(Model.PageSize)">@p</a>
                                    </li>
                                }

                                <li class="page-item me-1 @(Model.Page == Model.TotalPage ? "disabled" : "")">
                                    <a class="page-link"
                                       asp-action="Index"
                                       asp-route-search="@ViewBag.Search"
                                       asp-route-page="@(Model.Page + 1)"
                                       asp-route-pageSize="@(Model.PageSize)"><i class="fa-solid fa-arrow-right"></i></a>
                                </li>
                            </ul>

                        </nav>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('click', async (e) => {
        const btn = e.target.closest(".btn-delete");

        if (!btn) return;

        const id = btn.dataset.id;
        const name = btn.dataset.name;

        const ok = await Swal.fire ({
            title: "Xác nhận xoá",
            text: `Bạn có chắc muốn xoá "${name}"?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Xoá',
            cancelButtonText: 'Huỷ'
        }).then(r => r.isConfirmed);

        if (!ok) {
            return;
        }

        const token = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]').value;

        const url = `/admin/hall/delete/${encodeURIComponent(id)}`;

        const res = await fetch(url, {
            method: 'post',
            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset="utf-8" '},
            credentials: 'same-origin',
            body: new URLSearchParams({
                '__RequestVerificationToken': token,
            })
        });

        const raw = await res.text();
        let json;
        try {
            json = raw && res.headers.get('content-type')?.includes('application/json')
            ? JSON.parse(raw)
            : null;
        } catch {
            json = null;
        }

        if (!json) {
            console.error('Non-JSON response', res.status, raw);
            Swal.fire({ icon:'error', title:`HTTP ${res.status}`, text:'Máy chủ trả về non-JSON.' });
            return;
        }


        if (json.ok) {
            const row = document.getElementById(`${id}`);
            row?.remove();
            Swal.fire ({ icon:'success', title:'Đã xoá', timer: 1200, showConfirmButton:false });
            location.reload();
        } else {
            Swal.fire ({ icon:'error', title:'Lỗi', text: json.message || "Không xoá được" });
        }
    });
</script>