@model Project02.ViewModels.Customer.UserDashBoardVm
@{
    ViewData["Title"] = "Trang chủ";
}
<link rel="stylesheet" href="~/css/MovieIndex.css" />
<div class="container py-5">
    <h1 class="mt-4 fw-bold text-left" style="color: #fff;">🎬 Khám Phá Phim</h1>

    <!-- Banner Carousel với chấm tròn -->
    <div id="bannerCarousel" class="carousel slide mb-5" data-bs-ride="carousel" data-bs-interval="3500">
        <div class="carousel-indicators">
            @for (int i = 0; i < 6; i++)
            {
                <button type="button"
                        data-bs-target="#bannerCarousel"
                        data-bs-slide-to="@i"
                        class="@(i == 0 ? "active" : "")"
                        aria-label="Slide @(i + 1)"></button>
            }
        </div>

        <div class="carousel-inner rounded-3 shadow-lg overflow-hidden">
            <div class="carousel-item active"><img src="~/Banner/poster-mua-do (1).jpg" class="d-block w-100 banner-img" alt="Banner 1" /></div>
            <div class="carousel-item"><img src="~/Banner/poster-film-5.jpg" class="d-block w-100 banner-img" alt="Banner 2" /></div>
            <div class="carousel-item"><img src="~/Banner/poster-film-6 (1).jpg" class="d-block w-100 banner-img" alt="Banner 3" /></div>
            <div class="carousel-item"><img src="~/Banner/bannerADS2.jpg" class="d-block w-100 banner-img" alt="Banner 4" /></div>
            <div class="carousel-item"><img src="~/Banner/tu-chien-tren-khong-2048_1757996321581 (1).jpg" class="d-block w-100 banner-img" alt="Banner 5" /></div>
        </div>

        <button class="carousel-control-prev" type="button" data-bs-target="#bannerCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#bannerCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
        </button>
    </div>

    <!-- Phim đề cử -->
    <h3 class="movie-label">Phim đề cử</h3>
    <div class="movie-wrapper">
        <button class="arrow left" onclick="scrollLeftFn()">&#10094;</button>
        <div class="movie-container">

            @foreach (var movie in Model.RandomMovies)
            {
                var hasShowtime = Model.MoviesWithShowtime.Contains(movie.MovieSlug);
                <div class="movie-card">
                    <div class="movie-img">
                        <img src="@movie.MoviePoster" alt="@movie.MovieName">
                        <div class="movie-overlay">
                            <a asp-action="Details" asp-controller="UserMovie" asp-route-id="@movie.MovieSlug" class="btn btn-detail text-white">Xem chi tiết</a>
                            @if (hasShowtime)
                            {
                                <a href="/showtime/@movie.MovieSlug" class="btn btn-danger">Mua vé</a>
                            }
                            else
                            {
                                <button class="btn btn-danger" disabled style="cursor: not-allowed;">Chưa có lịch chiếu</button>
                            }
                        </div>
                        <span class="badge badge-4k">4K</span>
                    </div>
                    <div class="movie-info">
                        <h3 class="title-vi">@movie.MovieName</h3>
                        <p class="title-en">@movie.MovieYear</p>
                    </div>
                </div>
            }
        </div>
        <button class="arrow right" onclick="scrollRightFn()">&#10095;</button>
    </div>

    <h3 class="movie-label mt-5 ">Tất cả phim</h3>
    <div class="row g-4 justify-content-center">
        @foreach (var movie in Model.Movies)
        {
            var hasShowtime = Model.MoviesWithShowtime.Contains(movie.MovieSlug);
            <div class="col-6 col-md-4 col-lg-3 d-flex justify-content-center">
                <div class="film-card">
                    <div class="film-poster">
                        <img src="@movie.MoviePoster" alt="Poster" class="img-fluid" />
                        <div class="film-overlay">
                            <a asp-action="Details" asp-controller="UserMovie" asp-route-id="@movie.MovieSlug" class="btn btn-detail text-white">Xem chi tiết</a>
                            @if (hasShowtime)
                            {
                                <a href="/showtime/@movie.MovieSlug" class="btn btn-danger">Mua vé</a>
                            }
                            else
                            {
                                <button class="btn btn-danger" disabled style="cursor: not-allowed;">Chưa có lịch chiếu</button>
                            }
                        </div>
                    </div>
                    <div class="film-info">
                        <p class="film-title">@movie.MovieName</p>
                        <p class="film-year">@movie.MovieYear</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Scripts -->
<script>
    function scrollLeftFn() {
        const container = document.querySelector('.movie-container');
        container.scrollBy({ left: -300, behavior: 'smooth' });
    }

    function scrollRightFn() {
        const container = document.querySelector('.movie-container');
        container.scrollBy({ left: 300, behavior: 'smooth' });
    }

    // Loop vô tận cho "Phim đề cử"
    document.addEventListener('DOMContentLoaded', () => {
        const container = document.querySelector('.movie-container');
        const leftBtn = document.querySelector('.arrow.left');
        const rightBtn = document.querySelector('.arrow.right');

        const firstCard = container.querySelector('.movie-card');
        const style = getComputedStyle(container);
        const gap = parseInt(style.gap) || 15;
        const cardWidth = firstCard.offsetWidth;
        const scrollAmount = cardWidth + gap;

        rightBtn.addEventListener('click', () => {
            if (container.scrollLeft + container.clientWidth >= container.scrollWidth - 5) {
                container.scrollTo({ left: 0, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
            }
        });

        leftBtn.addEventListener('click', () => {
            if (container.scrollLeft <= 0) {
                container.scrollTo({ left: container.scrollWidth, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
            }
        });
    });

        let autoCarouselInterval;

    function scrollLeftFn() {
        const container = document.querySelector('.movie-container');
        container.scrollBy({ left: -300, behavior: 'smooth' });
        resetAutoCarousel(); // đảm bảo không cuộn khi người dùng vừa click
    }
    function scrollRightFn() {
        const container = document.querySelector('.movie-container');
        container.scrollBy({ left: 300, behavior: 'smooth' });
        resetAutoCarousel();
    }

    function autoCarousel() {
        scrollRightFn();
    }

    function resetAutoCarousel() {
        clearInterval(autoCarouselInterval);
        autoCarouselInterval = setInterval(autoCarousel, 4000); // auto slide mỗi 4 giây
    }

    document.addEventListener('DOMContentLoaded', () => {
        const container = document.querySelector('.movie-container');
        const leftBtn = document.querySelector('.arrow.left');
        const rightBtn = document.querySelector('.arrow.right');

        const firstCard = container.querySelector('.movie-card');
        const style = getComputedStyle(container);
        const gap = parseInt(style.gap) || 15;
        const cardWidth = firstCard.offsetWidth;
        const scrollAmount = cardWidth + gap;

        rightBtn.addEventListener('click', () => {
            if (container.scrollLeft + container.clientWidth >= container.scrollWidth - 5) {
                container.scrollTo({ left: 0, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
            }
            resetAutoCarousel();
        });

        leftBtn.addEventListener('click', () => {
            if (container.scrollLeft <= 0) {
                container.scrollTo({ left: container.scrollWidth, behavior: 'smooth' });
            } else {
                container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
            }
            resetAutoCarousel();
        });

        // Tự động chạy sau mỗi 4 giây
        autoCarouselInterval = setInterval(autoCarousel, 4000);

        // Khi rê chuột vào carousel thì dừng tự động
        container.addEventListener('mouseenter', () => clearInterval(autoCarouselInterval));
        container.addEventListener('mouseleave', resetAutoCarousel);
    });

</script>