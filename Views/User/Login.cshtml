@model Project02.ViewModels.LoginViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "Login";
    Layout = null;
}
<head>
    <title>Login</title>
</head>

<div class="login-container">
    <h2>Login</h2>
    <p class="sub-text">
        Welcome back! Please login to your account.
    </p>

    <form asp-action="Login" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="returnUrl" />
        <div class="form-group">
            <input asp-for="UserName" type="text" placeholder="Username" required />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="Password" type="password" placeholder="Password" required />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <button type="submit" class="btn">Login</button>
        <div class="login-link">
            Don't have an account? <a asp-action="Register">Register</a>
        </div>
    </form>
</div>

<style>
    body {
        font-family: 'Inter', 'Poppins', sans-serif;
        background: #141414;
        color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
    }

    .register-container {
        width: 100%;
        max-width: 400px;
        background: #1c1c1c;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
        animation: fadeIn 0.5s ease-in-out;
        color: #fff;
    }


    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .register-container h2 {
        margin-bottom: 15px;
        font-size: 24px;
        color: #e50914;
        text-align: center;
    }

    .register-container p.sub-text {
        font-size: 14px;
        color: #ccc;
        margin-bottom: 25px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 1px solid #333;
            border-radius: 8px;
            font-size: 14px;
            background: #141414;
            color: #fff;
            transition: border-color 0.3s, background 0.3s;
        }

            .form-group input::placeholder {
                color: #aaa;
            }

            .form-group input:focus {
                border-color: #e50914;
                outline: none;
                background: #1c1c1c;
            }

    .btn {
        width: 100%;
        padding: 12px;
        background: #e50914;
        color: #fff;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s;
    }

        .btn:hover {
            background: #b81d24;
        }

    .login-link {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        color: #ccc;
    }

        .login-link a {
            color: #e50914;
            text-decoration: none;
            font-weight: bold;
        }

            .login-link a:hover {
                text-decoration: underline;
            }

    .text-danger {
        color: #ff4c4c;
        font-size: 12px;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        $('form').submit(function(e) {
            e.preventDefault(); // Ngăn reload trang

            var form = $(this);
            var url = form.attr('action');
            var data = form.serialize();

            $.ajax({
                type: "POST",
                url: url,
                data: data,
                success: function(response) {
                    if (response.ok) {
                        showSuccessNotification('success', 'Thành công', 'Đăng nhập thành công!');

                        if (response.redirectUrl) {
                            setTimeout(function() {
                                window.location.href = response.redirectUrl;
                            }, 1500);
                        }
                    } else {
                        showFailNotification('Lỗi', response.message || 'Có lỗi xảy ra!');
                    }
                },
                error: function(xhr, status, error) {
                    showFailNotification('Lỗi', 'Lỗi kết nối hoặc server.');
                }
            });
        });
    });

    // Hàm hiện thông báo thành công
    function showSuccessNotification(type, title, text, timer = 3000) {
        Swal.fire({
            toast: true,
            position: 'top',
            showConfirmButton: false,
            timer: timer,
            timerProgressBar: true,
            icon: type,
            title: title,
            html: text,
            background: '#fff',
            customClass: {
                popup: 'shadow-sm rounded'
            }
        });
    }

    // Hàm hiện thông báo lỗi
    function showFailNotification(title, text, timer = 3000) {
        Swal.fire({
            toast: true,
            position: 'top',
            icon: 'error',
            title: title,
            html: text,
            showConfirmButton: false,
            timer: timer,
            timerProgressBar: true,
            background: '#fff',
            customClass: {
                popup: 'shadow-sm rounded'
            }
        });
    }

</script>