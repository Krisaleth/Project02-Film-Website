@model Project02.ViewModels.Ticket.TicketIndexVm

@{
    ViewData["Title"] = "Ticket";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex align-items-center">
                    <div>
                        <form asp-action="Index" method="get">
                            <select asp-for="sortOrder" asp-items="Model.SortOptions" class="form-select form-select-sm me-2"
                                    onchange="this.form.submit()"></select>
                        </form>
                    </div>

                    <div class="d-flex ms-auto">
                        <form asp-action="Index" method="get" class="d-flex me-2">
                            <input type="text" name="search" value="@Model.search"
                                   class="form-control form-control-sm me-2"
                                   placeholder="Search by movie name..." />
                            <input type="hidden" name="pageSize" value="@Model.PageSize" />
                            <button type="submit" class="btn btn-sm btn-secondary d-flex align-items-center">
                                <i class="fa-solid fa-magnifying-glass me-1"></i>
                                Search
                            </button>
                        </form>
                    </div>
                </div>

                <div class="card-body">
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Ticket ID</th>
                                <th>Movie</th>
                                <th>Showtime</th>
                                <th>Seat</th>
                                <th>Booking Time</th>
                                <th>Status</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Items.Any())
                            {
                                <tr>
                                    <td colspan="7" class="text-center text-muted">No tickets found</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in Model.Items)
                                {
                                    <tr id="@item.Ticket_ID">
                                        <td>@item.Ticket_ID</td>
                                        <td>@item.Movie_Name</td>
                                        <td>@item.Start_Time.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@item.SeatNumber</td>
                                        <td>@item.BookingTime.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            @switch (item.Status?.ToLower())
                                            {
                                                case "available":
                                                    <span class="badge bg-success">Available</span>
                                                    break;
                                                case "booked":
                                                    <span class="badge bg-primary">Booked</span>
                                                    break;
                                                case "expired":
                                                    <span class="badge bg-secondary">Expired</span>
                                                    break;
                                                case "used":
                                                    <span class="badge bg-info text-white">Used</span>
                                                    break;
                                                case "cancelled":
                                                    <span class="badge bg-danger">Cancelled</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-light text-dark">@item.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td class="text-center">
                                            <a asp-action="Detail" asp-route-id="@item.Ticket_ID" class="btn btn-sm btn-outline-info me-1">
                                                <i class="fas fa-info-circle"></i> View
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.Ticket_ID" class="btn btn-sm btn-outline-primary me-1">
                                                <i class="fa-solid fa-pen-to-square"></i> Edit
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>

                    <div class="row my-1">
                        <div class="col-12"></div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            Showing @Model.Start to @Model.End of @Model.TotalItems entries
                        </div>
                        @if (Model.TotalItems > 0)
                        {
                            <nav>
                                <ul class="pagination mb-0">
                                    <li class="page-item me-1 @(Model.Page == 1 ? "disabled" : "")">
                                        <a class="page-link" asp-route-page="@(Model.Page - 1)" asp-route-search="@Model.search" asp-route-sortOrder="@Model.sortOrder"><i class="fa-solid fa-arrow-left"></i></a>
                                    </li>
                                    @for (int p = 1; p <= Model.TotalPage; p++)
                                    {
                                        <li class="page-item me-1 @(p == Model.Page ? "active" : "")">
                                            <a class="page-link" asp-route-page="@p" asp-route-search="@Model.search" asp-route-sortOrder="@Model.sortOrder">@p</a>
                                        </li>
                                    }
                                    <li class="page-item me-1 @(Model.Page == Model.TotalPage ? "disabled" : "")">
                                        <a class="page-link" asp-route-page="@(Model.Page + 1)" asp-route-search="@Model.search" asp-route-sortOrder="@Model.sortOrder"><i class="fa-solid fa-arrow-right"></i></a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
